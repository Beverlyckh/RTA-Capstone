{"ast":null,"code":"import _classCallCheck from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, google } from 'google-maps-react';\nimport { connect } from 'react-redux';\nvar mapStyles = {\n  width: '50%',\n  height: '60%'\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"ON RECOIT LE PROP \", this.props.locations[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        style: mapStyles,\n        initialCenter: {\n          lat: -1.2884,\n          lng: 36.8233\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Kenyatta International Convention Centre',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nfunction Geocode(WrappedComponent) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(_class, _React$Component);\n\n      function _class() {\n        var _this2;\n\n        _classCallCheck(this, _class);\n\n        _this2 = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n        _this2.state = {\n          markers: []\n        };\n        return _this2;\n      }\n\n      _createClass(_class, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          if (this.props.markerLocations) {\n            var locations = this.props.markerLocations;\n            this.getLocationCoordinates(locations.from);\n            this.getLocationCoordinates(locations.to);\n            console.log(\"THE LOC \", this.state.markers);\n          }\n\n          this.setState(function (prev) {\n            prev.markers.push(coordinates);\n          });\n        }\n      }, {\n        key: \"getLocationCoordinates\",\n        value: function getLocationCoordinates(location) {\n          return new Promise(function (resolve, reject) {\n            var geocoder = new window.google.maps.Geocoder();\n            geocoder.geocode({\n              address: location\n            }, function (result, status) {\n              if (status == 'OK') {\n                var geometry = result[0].geometry.location;\n                var _coordinates = {\n                  lat: geometry.lat(),\n                  lng: geometry.lng()\n                };\n                resolve(_coordinates);\n              } else {\n                reject('ERROR');\n              }\n            });\n          });\n        }\n      }, {\n        key: \"renderMarkers\",\n        value: function renderMarkers() {\n          console.log(\" THE STATE \", this.state.markers);\n          this.state.markers.map(function (location) {\n            console.log(\" A LOCATION \", location);\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(WrappedComponent, Object.assign({\n            locations: this.state.markers\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }));\n        }\n      }]);\n\n      return _class;\n    }(React.Component)\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    markerLocations: state.mapReducer.data\n  };\n}\n\nexport var mapped = connect(mapStateToProps)(Geocode(MapContainer));\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC64eUv-Iw47Q9MqhsnpgzpvCUm-SM1qi4'\n})(mapped);","map":{"version":3,"sources":["/Users/beverlyackah/Documents/MyReactProjects/rta_v4/src/components/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","google","connect","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","console","log","locations","lat","lng","name","Geocode","WrappedComponent","markers","markerLocations","getLocationCoordinates","from","to","prev","push","coordinates","location","Promise","resolve","reject","geocoder","window","maps","Geocoder","geocode","address","result","status","geometry","map","mapStateToProps","mapReducer","data","mapped","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, google  } from 'google-maps-react';\nimport {connect} from 'react-redux'\n\nconst mapStyles = {\n  width: '50%',\n  height: '60%'\n};\n\n class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {} ,         //Shows the infoWindow to the selected place upon a marker\n      \n      };\n      onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n\n  componentWillMount(){\n    console.log(\"ON RECOIT LE PROP \",this.props.locations[0])\n  }\n \n   \n\n \n  \n    render() {\n        return (\n          <Map\n            google={this.props.google}\n            zoom={14}\n            style={mapStyles}\n            initialCenter={{\n             lat: -1.2884,\n             lng: 36.8233\n            }}\n          >\n          <Marker\n            onClick={this.onMarkerClick}\n            name={'Kenyatta International Convention Centre'}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </Map>\n  \n          \n        )\n      }\n   \n\n  }\n\n  function Geocode(WrappedComponent){\n\n    return class extends React.Component{\n\n      constructor(){\n        super()\n        this.state= {markers:[]}\n      }\n\n      componentWillMount(){\n        if(this.props.markerLocations ){\n          const locations = this.props.markerLocations;\n          \n          this.getLocationCoordinates(locations.from);\n          this.getLocationCoordinates(locations.to);\n           console.log(\"THE LOC \",this.state.markers)\n        }\n        this.setState(prev=>{\n          prev.markers.push(coordinates)\n        })\n      }\n\n      getLocationCoordinates(location){\n        return new Promise((resolve, reject)=>{\n          const geocoder = new window.google.maps.Geocoder();\n          geocoder.geocode({address:location}, (result, status)=>{\n            if(status=='OK'){\n              const geometry = result[0].geometry.location\n              const coordinates = {\n                lat: geometry.lat(),\n                lng:geometry.lng()\n              }\n              resolve(coordinates);\n             \n            }\n            else{\n              reject('ERROR')\n            }\n          })\n          \n        });\n      \n      }\n\n\n   renderMarkers(){\n    console.log(\" THE STATE \",this.state.markers);\n     this.state.markers.map(location =>{\n       console.log(\" A LOCATION \", location)\n     })\n   }\n\n   render(){\n     return (<WrappedComponent locations={this.state.markers} {...this.props}/>);\n   }\n\n    }\n\n  }\n\n  function mapStateToProps(state){\n    \n    return {\n      markerLocations: state.mapReducer.data\n    }\n  }\n\n  export const mapped = connect(mapStateToProps)(Geocode(MapContainer))\n\n  export default GoogleApiWrapper({\n    apiKey: 'AIzaSyC64eUv-Iw47Q9MqhsnpgzpvCUm-SM1qi4'\n  })(mapped);\n  "]},"metadata":{},"sourceType":"module"}