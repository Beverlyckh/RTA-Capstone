{"ast":null,"code":"import _regeneratorRuntime from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/beverlyackah/Documents/MyReactProjects/rta_v4/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, google } from 'google-maps-react';\nimport { connect } from 'react-redux';\nvar mapStyles = {\n  width: '50%',\n  height: '60%'\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"ON RECOIT LE PROP \", this.props.locations[0]);\n    }\n  }, {\n    key: \"renderMarkers\",\n    value: function renderMarkers() {\n      var _this2 = this;\n\n      this.props.locations.map(function (location) {\n        React.createElement(Marker, {\n          onClick: _this2.onMarkerClick,\n          name: 'Kenyatta International Convention Centre',\n          position: location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.locations.length > 0) {\n        this.renderMarkers();\n      }\n\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        style: mapStyles,\n        initialCenter: [{\n          lat: -1.2884,\n          lng: 36.8233\n        }, {\n          lat: 10.5,\n          lng: 45.6\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Kenyatta International Convention Centre',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nfunction Geocode(WrappedComponent) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(_class, _React$Component);\n\n      function _class() {\n        var _this3;\n\n        _classCallCheck(this, _class);\n\n        _this3 = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n        _this3.state = {\n          markers: []\n        };\n        return _this3;\n      }\n\n      _createClass(_class, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          this.getGeoLocation();\n        }\n      }, {\n        key: \"getGeoLocation\",\n        value: function () {\n          var _getGeoLocation = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var locations, markers, from, to;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!this.props.markerLocations) {\n                      _context.next = 12;\n                      break;\n                    }\n\n                    locations = this.props.markerLocations;\n                    markers = [];\n                    _context.next = 5;\n                    return this.getLocationCoordinates(locations.from);\n\n                  case 5:\n                    from = _context.sent;\n                    _context.next = 8;\n                    return this.getLocationCoordinates(locations.to);\n\n                  case 8:\n                    to = _context.sent;\n                    markers.push(from);\n                    markers.push(to);\n                    this.setState({\n                      markers: markers\n                    });\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function getGeoLocation() {\n            return _getGeoLocation.apply(this, arguments);\n          }\n\n          return getGeoLocation;\n        }()\n      }, {\n        key: \"getLocationCoordinates\",\n        value: function getLocationCoordinates(location) {\n          return new Promise(function (resolve, reject) {\n            var geocoder = new window.google.maps.Geocoder();\n            geocoder.geocode({\n              address: location\n            }, function (result, status) {\n              if (status == 'OK') {\n                var geometry = result[0].geometry.location;\n                var coordinates = {\n                  lat: geometry.lat(),\n                  lng: geometry.lng()\n                };\n                resolve(coordinates);\n              } else {\n                reject('ERROR');\n              }\n            });\n          });\n        }\n      }, {\n        key: \"renderMarkers\",\n        value: function renderMarkers() {\n          console.log(\" THE STATE \", this.state.markers);\n          this.state.markers.map(function (location) {\n            console.log(\" A LOCATION \", location);\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.markers.length > 0) {\n            console.log(\"ON Y ARRIVE\");\n            return React.createElement(WrappedComponent, Object.assign({\n              locations: this.state.markers\n            }, this.props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }));\n          } else {\n            return null;\n          }\n        }\n      }]);\n\n      return _class;\n    }(React.Component)\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    markerLocations: state.mapReducer.data\n  };\n}\n\nexport var mapped = connect(mapStateToProps)(Geocode(MapContainer));\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC64eUv-Iw47Q9MqhsnpgzpvCUm-SM1qi4'\n})(mapped);","map":{"version":3,"sources":["/Users/beverlyackah/Documents/MyReactProjects/rta_v4/src/components/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","google","connect","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","console","log","locations","map","location","length","renderMarkers","lat","lng","name","Geocode","WrappedComponent","markers","getGeoLocation","markerLocations","getLocationCoordinates","from","to","push","Promise","resolve","reject","geocoder","window","maps","Geocoder","geocode","address","result","status","geometry","coordinates","mapStateToProps","mapReducer","data","mapped","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, google  } from 'google-maps-react';\nimport {connect} from 'react-redux'\n\nconst mapStyles = {\n  width: '50%',\n  height: '60%'\n};\n\n class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {} ,         //Shows the infoWindow to the selected place upon a marker\n      \n      };\n      onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n\n  componentWillMount(){\n    console.log(\"ON RECOIT LE PROP \",this.props.locations[0])\n  }\n\n  renderMarkers(){\n    this.props.locations.map(location => {\n      <Marker\n      onClick={this.onMarkerClick}\n      name={'Kenyatta International Convention Centre'}\n      position={location}\n    />\n    })\n  }\n \n   \n\n \n  \n    render() {\n       if(this.props.locations.length>0){\n         this.renderMarkers();\n       }\n        return (\n          <Map\n            google={this.props.google}\n            zoom={14}\n            style={mapStyles}\n            initialCenter={[{\n             lat: -1.2884,\n             lng: 36.8233\n            },{\n              lat: 10.5,\n              lng: 45.6\n             }]}\n          >\n          <Marker\n            onClick={this.onMarkerClick}\n            name={'Kenyatta International Convention Centre'}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </Map>\n  \n          \n        )\n      }\n   \n\n  }\n\n  function Geocode(WrappedComponent){\n\n    return class extends React.Component{\n\n      constructor(){\n        super()\n        this.state= {markers:[]}\n      }\n\n      componentWillMount(){\n        this.getGeoLocation();\n      }\n\n      async getGeoLocation(){\n        if(this.props.markerLocations ){\n          const locations = this.props.markerLocations;\n          const markers = [];\n        const from = await this.getLocationCoordinates(locations.from);\n        const to = await this.getLocationCoordinates(locations.to);\n        markers.push(from);\n        markers.push(to);\n         this.setState({markers:markers})\n        }\n      }\n\n      getLocationCoordinates(location){\n        return new Promise((resolve, reject)=>{\n          const geocoder = new window.google.maps.Geocoder();\n          geocoder.geocode({address:location}, (result, status)=>{\n            if(status=='OK'){\n              const geometry = result[0].geometry.location\n              const coordinates = {\n                lat: geometry.lat(),\n                lng:geometry.lng()\n              }\n              resolve(coordinates);\n             \n            }\n            else{\n              reject('ERROR')\n            }\n          })\n          \n        });\n      \n      }\n\n\n   renderMarkers(){\n    console.log(\" THE STATE \",this.state.markers);\n     this.state.markers.map(location =>{\n       console.log(\" A LOCATION \", location)\n     })\n   }\n\n   render(){\n     if(this.state.markers.length>0){\n       console.log(\"ON Y ARRIVE\")\n       return (<WrappedComponent locations={this.state.markers} {...this.props}/>);\n     }\n     else{\n       return (null)\n     }\n    \n   }\n\n    }\n\n  }\n\n  function mapStateToProps(state){\n    \n    return {\n      markerLocations: state.mapReducer.data\n    }\n  }\n\n  export const mapped = connect(mapStateToProps)(Geocode(MapContainer))\n\n  export default GoogleApiWrapper({\n    apiKey: 'AIzaSyC64eUv-Iw47Q9MqhsnpgzpvCUm-SM1qi4'\n  })(mapped);\n  "]},"metadata":{},"sourceType":"module"}