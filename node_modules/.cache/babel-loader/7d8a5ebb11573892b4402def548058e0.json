{"ast":null,"code":"import * as moment from 'moment';\nimport titleize from 'titleize';\nexport var rentalType = function rentalType(isShared) {\n  return isShared ? 'shared' : 'entire';\n};\nexport var toUpperCase = function toUpperCase(value) {\n  return value ? titleize(value) : '';\n};\nexport var getRangeOfDates = function getRangeOfDates(startAt, endAt) {\n  var dateFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Y/MM/DD';\n  var tempDates = [];\n  var mEndAt = moment(endAt);\n  var mStartAt = moment(startAt);\n\n  while (mStartAt < mEndAt) {\n    tempDates.push(mStartAt.format(dateFormat));\n    mStartAt = mStartAt.add(1, 'day');\n  }\n\n  tempDates.push(mEndAt.format(dateFormat));\n  return tempDates;\n};","map":{"version":3,"sources":["/Users/beverlyackah/Documents/MyReactProjects/rta_v4/src/helper/helper.js"],"names":["moment","titleize","rentalType","isShared","toUpperCase","value","getRangeOfDates","startAt","endAt","dateFormat","tempDates","mEndAt","mStartAt","push","format","add"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA,SAAIA,QAAQ,GAAG,QAAH,GAAc,QAA1B;AAAA,CAA3B;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAIA,KAAK,GAAGJ,QAAQ,CAACI,KAAD,CAAX,GAAqB,EAA9B;AAAA,CAAzB;AAGP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAUC,KAAV,EAA4C;AAAA,MAA3BC,UAA2B,uEAAd,SAAc;AACvE,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAGX,MAAM,CAACQ,KAAD,CAArB;AACA,MAAII,QAAQ,GAAGZ,MAAM,CAACO,OAAD,CAArB;;AAEA,SAAOK,QAAQ,GAAGD,MAAlB,EAA0B;AACxBD,IAAAA,SAAS,CAACG,IAAV,CAAeD,QAAQ,CAACE,MAAT,CAAgBL,UAAhB,CAAf;AACAG,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgB,KAAhB,CAAX;AACD;;AAEDL,EAAAA,SAAS,CAACG,IAAV,CAAeF,MAAM,CAACG,MAAP,CAAcL,UAAd,CAAf;AAEA,SAAOC,SAAP;AACH,CAbM","sourcesContent":["import * as moment from 'moment';\nimport titleize from 'titleize';\n\nexport const rentalType = isShared => isShared ? 'shared' : 'entire'\n\nexport const toUpperCase = value => value ? titleize(value) : ''\n\n\nexport const getRangeOfDates = (startAt, endAt, dateFormat = 'Y/MM/DD') => {\n    const tempDates = [];\n    const mEndAt = moment(endAt);\n    let mStartAt = moment(startAt);\n  \n    while (mStartAt < mEndAt) {\n      tempDates.push(mStartAt.format(dateFormat));\n      mStartAt = mStartAt.add(1, 'day');\n    }\n  \n    tempDates.push(mEndAt.format(dateFormat));\n  \n    return tempDates;\n}  "]},"metadata":{},"sourceType":"module"}